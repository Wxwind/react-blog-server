syntax = "v1"

type Meta {
	Status int32  `json:"status,default=200"`
	Msg    string `json:"msg,default=succeed"`
}

type Article {
	Title       string `json:"title"`
	ArticleId   int64  `json:"articleId"`
	ImageURL    string `json:"imageURL"`
	Desc        string `json:"desc"`
	PublishTime string `json:"publishTime"`
	UpdateTime  string `json:"updateTime"`
}

type getArticleListResp {
	Data []*Article `json:"data"`
	Meta Meta       `json:"meta"`
}

type getArticlePathReq {
	ParticleId int64 `path:"particleId"`
}

type getArticlePathResp {
	Data string `json:"data"`
	Meta Meta   `json:"meta"`
}

type addArticleReq {
	Title       string `json:"title"`
	MdFileName  int32  `json:"mdFileName"`
	ImageURL    string `json:"imageURL"`
	Desc        string `json:"desc"`
	PublishTime string `json:"publishTime"`
	UpdateTime  string `json:"updateTime"`
}
type addArticleResp {
	ArticleURL string `json:"articleURL"`
}

service article-api {
	@doc "get all articles(limit 10)"
	@handler getArticleList
	get /articles returns (getArticleListResp)
	
	@doc "get article.md file URL"
	@handler getArticlePath
	get /articles/:particleId (getArticlePathReq) returns (getArticlePathResp)
}

@server(
	jwt: Auth
)
service article-api {
	@doc "add article to fileServer and Sql"
	@handler addArticle
	post /articles (addArticleReq) returns (addArticleResp)
}